"""empty message

Revision ID: 20210208_182036
Revises: 20210120_074454
Create Date: 2021-02-08 18:20:36.796641

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "20210208_182036"
down_revision = "20210120_074454"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "__crypto_ohlc_daily",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("provider", sa.String(length=255), nullable=False),
        sa.Column("market", sa.String(length=255), nullable=False),
        sa.Column("product", sa.String(length=255), nullable=False),
        sa.Column("periods", sa.Integer(), nullable=False),
        sa.Column("close_time", sa.Date(), nullable=False),
        sa.Column("open_price", sa.Float(), nullable=False),
        sa.Column("high_price", sa.Float(), nullable=False),
        sa.Column("low_price", sa.Float(), nullable=False),
        sa.Column("close_price", sa.Float(), nullable=False),
        sa.Column("volume", sa.Float(), nullable=False),
        sa.Column("quote_volume", sa.Float(), nullable=False),
        sa.Column("t_sma_5", sa.Float(), nullable=False),
        sa.Column("t_sma_10", sa.Float(), nullable=False),
        sa.Column("t_sma_15", sa.Float(), nullable=False),
        sa.Column("t_sma_20", sa.Float(), nullable=False),
        sa.Column("t_sma_25", sa.Float(), nullable=False),
        sa.Column("t_sma_30", sa.Float(), nullable=False),
        sa.Column("t_sma_200", sa.Float(), nullable=False),
        sa.Column(
            "t_cross",
            sa.Integer(),
            nullable=False,
            comment="1=golden cross -1=dead cross",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("provider", "market", "product", "periods", "close_time"),
        comment="外部データソースから取得したチャート",
    )
    op.create_index(
        "uix_query",
        "__crypto_ohlc_daily",
        ["provider", "market", "product", "periods"],
        unique=False,
    )
    op.create_table(
        "__crypto_pairs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("provider", sa.String(length=255), nullable=False),
        sa.Column("symbol", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "__topic",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("referer", sa.String(length=1023), nullable=True),
        sa.Column("url", sa.String(length=1023), nullable=True),
        sa.Column("url_cache", sa.String(length=1023), nullable=True),
        sa.Column("title", sa.String(length=1023), nullable=True),
        sa.Column("summary", sa.String(length=1023), nullable=True),
        sa.Column("memo", sa.String(length=1023), nullable=False),
        sa.Column("detail", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "case_node",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("is_system", sa.Boolean(), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "crypto_trade_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("provider", sa.String(length=255), nullable=False),
        sa.Column("market", sa.String(length=255), nullable=False),
        sa.Column("product", sa.String(length=255), nullable=False),
        sa.Column("periods", sa.Integer(), nullable=False),
        sa.Column("size", sa.DECIMAL(), nullable=False),
        sa.Column("ask_or_bid", sa.Integer(), nullable=False),
        sa.Column("entry_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("entry_close_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("entry_side", sa.String(length=255), nullable=False),
        sa.Column("entry_price", sa.DECIMAL(), nullable=False),
        sa.Column("entry_commission", sa.DECIMAL(), nullable=False),
        sa.Column("entry_reason", sa.String(length=255), nullable=False),
        sa.Column("settle_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("settle_close_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("settle_side", sa.String(length=255), nullable=False),
        sa.Column("settle_price", sa.DECIMAL(), nullable=False),
        sa.Column("settle_commission", sa.DECIMAL(), nullable=False),
        sa.Column("settle_reason", sa.String(length=255), nullable=False),
        sa.Column("job_name", sa.String(length=255), nullable=False),
        sa.Column("job_version", sa.String(length=255), nullable=False),
        sa.Column("is_back_test", sa.Boolean(), nullable=False),
        sa.Column("close_date_interval", sa.Integer(), nullable=False),
        sa.Column("diff_profit", sa.DECIMAL(), nullable=False),
        sa.Column("diff_profit_rate", sa.DECIMAL(), nullable=False),
        sa.Column("fact_profit", sa.DECIMAL(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "dummy",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name",
            sa.String(length=255),
            nullable=False,
            comment="ユニークな名前列です。テスト等で、データをルックアップするのに利用ください。",
        ),
        sa.Column(
            "date_naive",
            sa.DateTime(),
            nullable=True,
            comment="awareな日付を登録しても、timezoneは保持されません。データベースの設定に依存しますが、本アプリケーションは現地時間からutc時間へ変換が行われます。",
        ),
        sa.Column(
            "date_aware",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="timezoneを保持します。オフセットのみ保持し、timezone名は保持しません。",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        comment="検証用に使うテーブルです。sqlalchemyの挙動確認テストでのみ使用してしています。",
    )
    op.create_table(
        "keywords",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("category_name", sa.String(), nullable=True),
        sa.Column("tag", sa.String(), nullable=True),
        sa.Column("max_size", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_keywords_category_name"), "keywords", ["category_name"], unique=True
    )
    op.create_index(op.f("ix_keywords_tag"), "keywords", ["tag"], unique=False)
    op.create_table(
        "trade_detector",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("is_system", sa.Boolean(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=1023), nullable=False),
        sa.Column("code", sa.Text(), nullable=False),
        sa.Column(
            "invert_ask_or_bid",
            sa.Boolean(),
            nullable=False,
            comment="ask bidのフラグを反転させます。",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trade_job",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=1024), nullable=False),
        sa.Column("provider", sa.String(length=255), nullable=False),
        sa.Column("market", sa.String(length=255), nullable=False),
        sa.Column("product", sa.String(length=255), nullable=False),
        sa.Column("periods", sa.Integer(), nullable=False),
        sa.Column("cron", sa.String(length=255), nullable=False),
        sa.Column("broker", sa.String(length=255), nullable=False),
        sa.Column("bet_strategy", sa.String(length=255), nullable=True),
        sa.Column("order_logic", sa.JSON(), nullable=True),
        sa.Column("trade_rule", sa.JSON(), nullable=True),
        sa.Column("job_type", sa.String(length=255), nullable=True),
        sa.Column("trade_type", sa.String(length=255), nullable=False),
        sa.Column("monitor_topic", sa.String(length=255), nullable=False),
        sa.Column("detector_name", sa.String(length=255), nullable=False),
        sa.Column("last_check_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("order_status", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "trade_profile",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=1024), nullable=False),
        sa.Column("provider", sa.String(length=255), nullable=False),
        sa.Column("market", sa.String(length=255), nullable=False),
        sa.Column("product", sa.String(length=255), nullable=False),
        sa.Column("periods", sa.Integer(), nullable=False),
        sa.Column("cron", sa.String(length=255), nullable=False),
        sa.Column("broker", sa.String(length=255), nullable=False),
        sa.Column("bet_strategy", sa.String(length=255), nullable=True),
        sa.Column("order_logic", sa.JSON(), nullable=True),
        sa.Column("trade_rule", sa.JSON(), nullable=True),
        sa.Column("job_type", sa.String(length=255), nullable=True),
        sa.Column("trade_type", sa.String(length=255), nullable=False),
        sa.Column("monitor_topic", sa.String(length=255), nullable=False),
        sa.Column("detector_name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "target",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("node_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["node_id"],
            ["case_node.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("target")
    op.drop_table("trade_profile")
    op.drop_table("trade_job")
    op.drop_table("trade_detector")
    op.drop_index(op.f("ix_keywords_tag"), table_name="keywords")
    op.drop_index(op.f("ix_keywords_category_name"), table_name="keywords")
    op.drop_table("keywords")
    op.drop_table("dummy")
    op.drop_table("crypto_trade_results")
    op.drop_table("case_node")
    op.drop_table("__topic")
    op.drop_table("__crypto_pairs")
    op.drop_index("uix_query", table_name="__crypto_ohlc_daily")
    op.drop_table("__crypto_ohlc_daily")
    # ### end Alembic commands ###
